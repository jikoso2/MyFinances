@page "/debenturescalculator"

@using MyFinances.Models;
@using MyFinances.Helpers;
@inject Data.DebentureService DebentureService



<div class="card mx-auto mt-5" style="width: 65rem">
	<div class="card-header">
		Kalkulator Obligacji
	</div>
	<div class="card-body">
		<EditForm Model="@model" OnValidSubmit="CalculateDebentures">

			<DataAnnotationsValidator />
			<ValidationSummary />

			<div class="form-group">
				<label style="margin-bottom:20px;margin-right:5px">TypObligacji:</label>
				<InputSelect id="debentureType" @bind-Value="model.Type" style="height:30px;width:75px">
					@foreach (var DebentureType in Enum.GetValues(typeof(DebentureType)))
					{
						<option value="@DebentureType">@DebentureType</option>
					}
				</InputSelect>

				<div class="form-check-label">
					<InputCheckbox @bind-Value="model.BelkaTax" class="form-check-label" style="height:25px;width:25px" />
					<label class="form-check-label" style="position: absolute; margin-left: 7px"> Uwzględnienie podatku od zysków kapitałowych (19%)</label>
				</div>
			</div>



			<h5>Opis:</h5>

			<div class="form-group">
				<label>@InformationAboutDebenture()</label>
			</div>

			<h5>Wprowadź informacje:</h5>

			<div class="form-group" style="width:25%">
				<label>Ilość Obligacji</label>
				<InputNumber @bind-Value="model.Amount" class="form-control" />
			</div>

			@switch (model.Type)
			{
				case DebentureType.OTS:
					SetDefaultPercentageValues();
					<div class="form-group" style="width:25%">
						<label>Wysokość rocznego oprocentowania</label>
						<InputNumber @bind-Value="model.OTSPercentage" class="form-control" />
					</div>
					break;
				case DebentureType.DOS:
					SetDefaultPercentageValues();
					<div class="form-group" style="width:25%">
						<label>Wysokość rocznego oprocentowania</label>
						<InputNumber @bind-Value="model.DOSPercentage" class="form-control" />
					</div>
					break;
				case DebentureType.TOZ:
					SetDefaultPercentageValues();
					<h3>Juz wkrótce...</h3>
					break;
				case DebentureType.EDO:
					SetDefaultPercentageValues();
					<h3>Juz wkrótce...</h3>
					break;
				case DebentureType.COI:
					SetDefaultPercentageValues();
					<h3>Juz wkrótce...</h3>
					break;
				default:
					break;
			}

			<button class="btn btn-primary" type="submit">Oblicz</button>

		</EditForm>
	</div>

	@if (debentureResult == null || debentureResult.DebentureData == null || debentureResult.DebentureData.DebentureColumns == null)
	{
	}
	else
	{
		<p>
			<div class="card-footer">
				@foreach (var debentureInfo in debentureResult.DebentureInfo)
				{
					<div class="row">
						<div class="col">@debentureInfo.Item1</div>
						<div class="col text-right">@debentureInfo.Item2</div>
					</div>
				}
			</div>
		</p>
		<table class="table table-bordered" style="align-content:center">
			<thead>
				<tr>
					@foreach (var head in debentureResult.DebentureData.Head)
					{
						<th>@head</th>
					}
				</tr>
			</thead>
			<tbody>
				@foreach (var column in debentureResult.DebentureData.DebentureColumns)
				{
				<td>
					@foreach (var row in column.Rows)
					{
					<tr>@row</tr>
				}
					</td>
				}
				</tbody>
			</table>
		}

</div>


@code {
	private DebentureModel model = new DebentureModel();
	private Data.Debenture debentureResult;


	private async Task CalculateDebentures()
	{
		debentureResult = await DebentureService.GetDebentureAsync(model);
	}
	private string InformationAboutDebenture()
	{
		return DebentureService.GetInformationAboutDebenture(model.Type);
	}
	private void SetDefaultPercentageValues()
	{
		model.DOSPercentage = model.Type != DebentureType.DOS ? DefaultValue.DOSPercentage : model.DOSPercentage;
		model.OTSPercentage = model.Type != DebentureType.OTS ? DefaultValue.OTSPercentage : model.OTSPercentage;
	}
}
