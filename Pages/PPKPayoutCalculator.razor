@page "/ppkpayoutcalculator"

@using MyFinances.Models
@using MyFinances.Data
@using MyFinances.Helpers
@using System.Threading
@using Microsoft.AspNetCore.Components.Web

@inject Data.PPKPayoutService PPKPayoutService


<div class="card mx-auto mt-5">
    <div class="card-header">
        Kalkulator PPK
    </div>
    <div class="card-body">
        <EditForm Model="model" OnValidSubmit="CalculatePPK">

            <DataAnnotationsValidator />
            <ValidationSummary />

            Wybierz sposób w jaki chcesz wprowadzić wpłacone kwoty.
            <InputSelect id="payoutType" @bind-Value="model.PayoutType" style="height:30px;width:75px">
                @foreach (var PayoutType in Enum.GetValues(typeof(PayoutType)))
                {
                    <option value="@PayoutType">@PayoutType</option>
                }
            </InputSelect>

            @switch (model.PayoutType)
            {
                case PayoutType.Całość:
                    <div class="form-group" style="margin: 15px">
                        <label>Kwota zgromadzona na PPK</label>
                        <div class="input-group"><input @bind="model.Amount" class="form-control"><div class="input-group-append"><span class="input-group-text">zł</span></div></div>
                    </div>
                    break;

                case PayoutType.Cześciami:
                    <div class="form-group" style="margin: 15px">
                        <label>Kwota wpłacona przez pracodawce</label>
                        <div class="input-group"><input @bind="model.EmployerAmount" class="form-control"><div class="input-group-append"><span class="input-group-text">zł</span></div></div>
                    </div>
                    <div class="form-group" style="margin: 15px">
                        <label>Kwota wpłacona przez pracownika</label>
                        <div class="input-group"><input @bind="model.EmployeeAmount" class="form-control"><div class="input-group-append"><span class="input-group-text">zł</span></div></div>
                    </div>
                    break;

                default:
                    break;
            }

            <div class="form-group" style="margin: 15px">
                <label>Kwota wpłacona przez państwo</label>
                <div class="input-group"><input @bind="model.CountryAmount" class="form-control"><div class="input-group-append"><span class="input-group-text">zł</span></div></div>
            </div>
            <div class="form-group" style="margin: 15px">
                <label>Procent zwrotu</label>
                <div class="input-group"><input @bind="model.Percentage" class="form-control"><div class="input-group-append"><span class="input-group-text">%</span></div></div>
            </div>

            <div class="form-check-label" style="margin:15px">
                <InputCheckbox @bind-Value="model.EarlyPayment" class="form-check-label" id="checkbox" disabled/>
                <label class="form-check-label" id="checkbox-label"> Wypłata przed 60 rokiem życia </label>
            </div>

            <button type="submit" class="btn btn-primary btn-center"> Oblicz </button>

        </EditForm>
    </div>

    @if (ppkResult != null && ppkResult.PPKPayoutInfo != null)
    {
        <p>
            <div class="card-footer">
                @foreach (var ppkInfo in ppkResult.PPKPayoutInfo)
                {
                    <div class="row" id="rowinfoot">
                        <div class="col-8">@ppkInfo.Item1</div>
                        <div class="col-4 text-right">@ppkInfo.Item2</div>
                    </div>
                }
            </div>
        </p>
    }

</div>


@code {
    private PPKPayoutModel model = new PPKPayoutModel();
    private Data.PPKPayout ppkResult;


    private async Task CalculatePPK()
    {
        ppkResult = await PPKPayoutService.GetPPKPayoutCalculatedAsync(model);
    }
}
