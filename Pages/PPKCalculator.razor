@page "/ppkcalculator"

@using MyFinances.Models
@using MyFinances.Data
@using MyFinances.Helpers
@using System.Threading
@using Microsoft.AspNetCore.Components.Web

@inject Data.PPKService PPKService


<div class="card mx-auto mt-5">
	<div class="card-header">
		Kalkulator PPK
	</div>
	<div class="card-body">
		@((MarkupString)InformationAboutPPK())
		<EditForm Model="model" OnValidSubmit="CalculatePPK">

			<DataAnnotationsValidator />
			<ValidationSummary />

			<div class="form-group" style="margin: 15px">
				<label>Wysokość wypłaty brutto</label>
				<div class="input-group"><input @bind="model.Amount" class="form-control"><div class="input-group-append"><span class="input-group-text">zł</span></div></div>
			</div>

			<div class="form-check-label" style="margin:15px">
				<InputCheckbox @bind-Value="model.EarlyPayment" class="form-check-label" id="checkbox" />
				<label class="form-check-label" id="checkbox-label"> Wypłata przed 60 rokiem życia </label>
			</div>

			<div class="form-group" style="margin: 15px">
				<label>Długość oszczędzenia</label>
				<div class="input-group"><input @bind="model.Duration" class="form-control"><div class="input-group-append"><span class="input-group-text">mies.</span></div></div>
			</div>


			<section class="w-100 p-4 pb-4">
				<label for="percentageRange" class="form-label">Procent wypłaty wpłacany przez przacownika</label>
				<div class="range">
					<input type="range" class="form-range" min="0.5" max="4" step="0.5" id="percentageRange" @onchange="CalculatePPK" @bind="model.EmployeePercentage" @bind:event="oninput" />
				</div>
				<div class="form-group">
					<div class="input-group"><input disabled="@true" @bind="model.EmployeePercentage" max="4" min="0.5" @bind:event="oninput" class="form-control"><div class="input-group-append"><span class="input-group-text">%</span></div></div>
				</div>
			</section>

			<section class="w-100 p-4 pb-4">
				<label for="percentageEmployerRange" class="form-label">Procent wypłaty wpłacany przez pracodawce</label>
				<div class="range">
					<input type="range" class="form-range" min="1.5" max="4" step="0.5" id="percentageEmployerRange" @onchange="CalculatePPK" @bind="model.EmployerPercentage" @bind:event="oninput" />
				</div>
				<div class="form-group">
					<div class="input-group"><input disabled="@true" @bind="model.EmployerPercentage" max="4" min="1.5" @bind:event="oninput" class="form-control"><div class="input-group-append"><span class="input-group-text">%</span></div></div>
				</div>
			</section>

			<section class="w-100 p-4 pb-4">
				<label for="percentageRange" class="form-label">Szacowane roczne oprocentowanie funduszu</label>
				<div class="range">
					<input type="range" class="form-range" min="-10" max="10" step="0.1" id="percentageDepositRange" @onchange="CalculatePPK" @bind="model.DepositPercentage" @bind:event="oninput" />
				</div>
				<div class="form-group">
					<div class="input-group"><input disabled="@true" @bind="model.DepositPercentage" max="10" min="-10" @bind:event="oninput" class="form-control"><div class="input-group-append"><span class="input-group-text">%</span></div></div>
				</div>
			</section>
			<button type="submit" class="btn btn-primary btn-center"> Oblicz </button>

		</EditForm>
	</div>

	@if (ppkResult != null && ppkResult.PPKInfo != null)
	{
		<p>
			<div class="card-footer">
				@foreach (var ppkInfo in ppkResult.PPKInfo)
				{
					<div class="row" id="rowinfoot">
						<div class="col-8">@ppkInfo.Item1</div>
						<div class="col-4 text-right">@ppkInfo.Item2</div>
					</div>
				}
			</div>
		</p>
	}

</div>


@code {
	private PPKModel model = new PPKModel();
	private Data.PPK ppkResult;


	private async Task CalculatePPK()
	{
		ppkResult = await PPKService.GetPPKCalculatedAsync(model);
	}

	private string InformationAboutPPK()
	{
		return PPKService.GetInformationAboutPPK();
	}
}
